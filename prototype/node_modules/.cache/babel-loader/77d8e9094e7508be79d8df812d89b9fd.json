{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minec\\\\Documents\\\\GitHub\\\\C3KGU1_Prototype_Adam_Kumlin\\\\prototype\\\\src\\\\components\\\\DetailsBox.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DetailsBox(props) {\n  _s();\n\n  // Komponenten tar emot props.\n  const [travelTotalPrice] = useState(0);\n  const checkInDateDays = new Date(props.chooseCheckInDate);\n  const checkOutDateDays = new Date(props.chooseCheckOutDate); // Skapar två konstanter som innehåller de olika datumen för incheckning och utcheckning.\n\n  const oneDay = 24 * 60 * 60 * 1000; // Skapar en konstant som innehåller antalet millisekunder som finns i en dag.\n\n  const dayDifference = Math.round(Math.abs((checkInDateDays - checkOutDateDays) / oneDay)); // Skapar en konstant som innehåller antalet dagar som finns mellan inchecknings- och utcheckningsdatumet. Funktionen \"Math.round\" \n  // avrundar till närmaste heltal och funktionen \"Math.abs\" returnerar absolutbeloppet av \"checkInDateDays\" minus \"checkOutDays\" dividerat med \"oneDay\".\n\n  const validName = new RegExp(\"[a-zA-ZåäöÅÄÖ]+$\");\n  const validEmail = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\n  const validPhoneAndCreditCard = new RegExp('^[0-9]+$'); // Deklarerar variabler som innehåller regex-uttryck som kontrollerar om användaren har skrivit in ett giltigt namn, e-post, telefonnummer och kreditkortsnummer.\n\n  function handleChange(event) {\n    // Skapar en funktion som tar emot ett event.\n    props.setPaymentMethod(event.target.value); // Anropar funktionen \"setPaymentMethod\" som finns i App.js och skickar med det betalningsmetod som användaren har valt.\n  }\n\n  function handleTravelCheck(event) {\n    // Skapar en funktion som tar emot ett event.\n    let updatedTravel;\n    props.setTravelPrice(event.target.value);\n  }\n\n  function clearTravelPrice() {\n    props.setTravelPrice(0);\n  }\n\n  let total = props.chosenRooms.price * props.chosenRoomAmount * dayDifference + parseInt(props.travelPrice); // Deklarerar en variabel som räknar ut totalpriset för rummen som användaren har valt. Priset per rum (props.chosenRooms.price) multipliceras med antalet rum (props.chosenRoomAmount).\n\n  function validateForm() {\n    // Skapar en funktion som kontrollerar om användaren har fyllt i alla fält samt om användaren har skrivit in giltiga värden i fälten.\n    if (!props.customerName || !props.customerPhone || !props.customerEmail || !props.customerCreditCard || !props.paymentMethod) {\n      // Om någon av state-variablerna \"customerName\", \"customerPhone\", \"customerEmail\", \"customerCreditCard\" eller \"paymentMethod\" inte har något värde.\n      alert(\"Please fill out all the fields.\"); // Skriver ut ett felmeddelande.\n    } else if (!validName.test(props.customerName)) {\n      // Om användaren har skrivit in ett namn som inte stämmer överens med regex-uttrycket \"validName\".\n      alert(\"The name is invalid.\"); // Skriver ut ett felmeddelande.\n    } else if (!validEmail.test(props.customerEmail)) {\n      // Om användaren har skrivit in en e-post som inte stämmer överens med regex-uttrycket \"validEmail\".\n      alert(\"The email is invalid.\"); // Skriver ut ett felmeddelande.\n    } else if (!validPhoneAndCreditCard.test(props.customerPhone)) {\n      // Om användaren har skrivit in ett telefonnummer som inte stämmer överens med regex-uttrycket \"validPhoneAndCreditCard\".\n      alert(\"The phone number is invalid.\"); // Skriver ut ett felmeddelande.\n    } else if (!validPhoneAndCreditCard.test(props.customerCreditCard)) {\n      // Om användaren har skrivit in ett kreditkortsnummer som inte stämmer överens med regex-uttrycket \"validPhoneAndCreditCard\".\n      alert(\"The credit card number is invalid.\"); // Skriver ut ett felmeddelande.\n    } else {\n      props.confirmBooking(props.id); // Annars anropas funktionen \"confirmBooking\" som finns i App.js och skickar med id:t på det hotell som användaren har valt.\n    }\n  }\n\n  if (!props.checkOutStatus) {\n    // Om state-variabeln \"checkOutStatus\" är falskt, alltså om utcheckningsprocessen inte har påbörjats än.\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this); // Returnerar en tom div.\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DetailsBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.backDetailsBox,\n        className: \"backButton\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userName\",\n          value: props.customerName,\n          onChange: props.changeCustomerName,\n          placeholder: \"John Doe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"phone\",\n          value: props.customerPhone,\n          onChange: props.changeCustomerPhone,\n          placeholder: \"1234567890\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"E-mail\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: props.customerEmail,\n          onChange: props.changeCustomerEmail,\n          placeholder: \"example@example.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Credit card number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"creditCard\",\n          value: props.customerCreditCard,\n          onChange: props.changeCustomerCreditCard,\n          placeholder: \"1234567890\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\" Pay now with credit card\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paymentMethod\",\n          value: \"With credit card\",\n          checked: props.paymentMethod === \"With credit card\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 197\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Pay at the hotel\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paymentMethod\",\n          value: \"At the hotel\",\n          checked: props.paymentMethod === \"At the hotel\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choose travel (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [props.chosenHotel.airports[0].airportName, \" $\", props.chosenHotel.airports[0].price, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: travelClear,\n          name: \"chooseAirports\",\n          value: props.chosenHotel.airports[0].price,\n          onChange: handleTravelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 111\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [props.chosenHotel.airports[1].airportName, \" $\", props.chosenHotel.airports[1].price, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: travelClear,\n          name: \"chooseAirports\",\n          value: props.chosenHotel.airports[1].price,\n          onChange: handleTravelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 111\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearTravelPrice,\n        children: \"Clear travel price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hotel details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hotel name: \", props.chosenHotel.hotelName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hotel destination: \", props.chosenHotel.destination]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Room name: \", props.chosenRooms.roomName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recommended guest amount: \", props.chosenRooms.guests]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Check-in date: \", props.chooseCheckInDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Check-out date: \", props.chooseCheckOutDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total price: $\", total, \" for \", props.chosenRoomAmount, \" room(s) for \", props.chosenGuestAmount, \" guest(s) for \", dayDifference, \" day(s) and travel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: validateForm,\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(DetailsBox, \"lDJnTzeLf47DfCAntGHkQEFGQkI=\");\n\n_c = DetailsBox;\nexport default DetailsBox; // Exporterar komponenten som \"DetailsBox\".\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsBox\");","map":{"version":3,"names":["useState","DetailsBox","props","travelTotalPrice","checkInDateDays","Date","chooseCheckInDate","checkOutDateDays","chooseCheckOutDate","oneDay","dayDifference","Math","round","abs","validName","RegExp","validEmail","validPhoneAndCreditCard","handleChange","event","setPaymentMethod","target","value","handleTravelCheck","updatedTravel","setTravelPrice","clearTravelPrice","total","chosenRooms","price","chosenRoomAmount","parseInt","travelPrice","validateForm","customerName","customerPhone","customerEmail","customerCreditCard","paymentMethod","alert","test","confirmBooking","id","checkOutStatus","backDetailsBox","changeCustomerName","changeCustomerPhone","changeCustomerEmail","changeCustomerCreditCard","chosenHotel","airports","airportName","travelClear","handleTravelChange","hotelName","destination","roomName","guests","chosenGuestAmount"],"sources":["C:/Users/minec/Documents/GitHub/C3KGU1_Prototype_Adam_Kumlin/prototype/src/components/DetailsBox.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction DetailsBox(props) {\r\n// Komponenten tar emot props.\r\n\r\nconst [travelTotalPrice] = useState(0);\r\n\r\nconst checkInDateDays = new Date(props.chooseCheckInDate);\r\nconst checkOutDateDays = new Date(props.chooseCheckOutDate);\r\n// Skapar två konstanter som innehåller de olika datumen för incheckning och utcheckning.\r\n\r\nconst oneDay = 24 * 60 * 60 * 1000;\r\n// Skapar en konstant som innehåller antalet millisekunder som finns i en dag.\r\n\r\nconst dayDifference = Math.round(Math.abs((checkInDateDays - checkOutDateDays) / oneDay));\r\n// Skapar en konstant som innehåller antalet dagar som finns mellan inchecknings- och utcheckningsdatumet. Funktionen \"Math.round\" \r\n// avrundar till närmaste heltal och funktionen \"Math.abs\" returnerar absolutbeloppet av \"checkInDateDays\" minus \"checkOutDays\" dividerat med \"oneDay\".\r\n\r\nconst validName = new RegExp(\"[a-zA-ZåäöÅÄÖ]+$\");\r\nconst validEmail = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\r\nconst validPhoneAndCreditCard = new RegExp('^[0-9]+$');\r\n// Deklarerar variabler som innehåller regex-uttryck som kontrollerar om användaren har skrivit in ett giltigt namn, e-post, telefonnummer och kreditkortsnummer.\r\n\r\n  function handleChange(event) {\r\n  // Skapar en funktion som tar emot ett event.\r\n\r\n    props.setPaymentMethod(event.target.value);\r\n    // Anropar funktionen \"setPaymentMethod\" som finns i App.js och skickar med det betalningsmetod som användaren har valt.\r\n  }\r\n\r\n  function handleTravelCheck(event) {\r\n    // Skapar en funktion som tar emot ett event.\r\n    let updatedTravel\r\n      props.setTravelPrice(event.target.value);\r\n  }\r\n\r\n  function clearTravelPrice () {\r\n    props.setTravelPrice(0);\r\n    \r\n  }\r\n\r\n  let total = props.chosenRooms.price * props.chosenRoomAmount * dayDifference + parseInt(props.travelPrice);\r\n  // Deklarerar en variabel som räknar ut totalpriset för rummen som användaren har valt. Priset per rum (props.chosenRooms.price) multipliceras med antalet rum (props.chosenRoomAmount).\r\n\r\n  function validateForm() {\r\n  // Skapar en funktion som kontrollerar om användaren har fyllt i alla fält samt om användaren har skrivit in giltiga värden i fälten.\r\n\r\n    if (!props.customerName || !props.customerPhone || !props.customerEmail || !props.customerCreditCard || !props.paymentMethod) {\r\n    // Om någon av state-variablerna \"customerName\", \"customerPhone\", \"customerEmail\", \"customerCreditCard\" eller \"paymentMethod\" inte har något värde.\r\n\r\n      alert(\"Please fill out all the fields.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n    } else if (!validName.test(props.customerName)) {\r\n    // Om användaren har skrivit in ett namn som inte stämmer överens med regex-uttrycket \"validName\".\r\n  \r\n      alert(\"The name is invalid.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n    } else if (!validEmail.test(props.customerEmail)) {\r\n    // Om användaren har skrivit in en e-post som inte stämmer överens med regex-uttrycket \"validEmail\".\r\n\r\n      alert(\"The email is invalid.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n\r\n    } else if (!validPhoneAndCreditCard.test(props.customerPhone)) {\r\n    // Om användaren har skrivit in ett telefonnummer som inte stämmer överens med regex-uttrycket \"validPhoneAndCreditCard\".\r\n\r\n      alert(\"The phone number is invalid.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n    } else if (!validPhoneAndCreditCard.test(props.customerCreditCard)) {\r\n    // Om användaren har skrivit in ett kreditkortsnummer som inte stämmer överens med regex-uttrycket \"validPhoneAndCreditCard\".\r\n\r\n      alert(\"The credit card number is invalid.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n    } else {\r\n      props.confirmBooking(props.id)\r\n      // Annars anropas funktionen \"confirmBooking\" som finns i App.js och skickar med id:t på det hotell som användaren har valt.\r\n    }\r\n  }\r\n\r\n  if (!props.checkOutStatus) {\r\n  // Om state-variabeln \"checkOutStatus\" är falskt, alltså om utcheckningsprocessen inte har påbörjats än.\r\n\r\n    return <div></div>;\r\n    // Returnerar en tom div.\r\n\r\n  } else {\r\n      \r\n      return (\r\n        <div className=\"DetailsBox\">\r\n            <button onClick={props.backDetailsBox} className=\"backButton\">Back</button>\r\n            <h2>Customer details</h2>  \r\n            <label>Name<input type=\"text\" name=\"userName\" value={props.customerName} onChange={props.changeCustomerName} placeholder=\"John Doe\"/></label>\r\n            <label>Phone number<input type=\"number\" name=\"phone\" value={props.customerPhone} onChange={props.changeCustomerPhone} placeholder=\"1234567890\"/></label>\r\n            <label>E-mail<input type=\"email\" name=\"email\" value={props.customerEmail} onChange={props.changeCustomerEmail} placeholder=\"example@example.com\"/></label>\r\n            <label>Credit card number<input type=\"number\" name=\"creditCard\" value={props.customerCreditCard} onChange={props.changeCustomerCreditCard} placeholder=\"1234567890\"/></label>\r\n            <label> Pay now with credit card<input type=\"radio\" name=\"paymentMethod\" value=\"With credit card\" checked={props.paymentMethod === \"With credit card\"} onChange={handleChange}/></label><br></br>\r\n            <label>Pay at the hotel<input type=\"radio\" name=\"paymentMethod\" value=\"At the hotel\" checked={props.paymentMethod === \"At the hotel\"} onChange={handleChange}/></label> \r\n            <p>Choose travel (optional)</p>\r\n            <br></br><label>{props.chosenHotel.airports[0].airportName} ${props.chosenHotel.airports[0].price}<input type=\"radio\" checked={travelClear} name=\"chooseAirports\" value={props.chosenHotel.airports[0].price} onChange={handleTravelChange}/></label>\r\n            <br></br><label>{props.chosenHotel.airports[1].airportName} ${props.chosenHotel.airports[1].price}<input type=\"radio\" checked={travelClear} name=\"chooseAirports\" value={props.chosenHotel.airports[1].price} onChange={handleTravelChange}/></label>\r\n            <button onClick={clearTravelPrice}>Clear travel price</button>\r\n            <h2>Hotel details</h2>\r\n            <p>Hotel name: {props.chosenHotel.hotelName}</p>\r\n            <p>Hotel destination: {props.chosenHotel.destination}</p>\r\n            <p>Room name: {props.chosenRooms.roomName}</p>\r\n            <p>Recommended guest amount: {props.chosenRooms.guests}</p>\r\n            <p>Check-in date: {props.chooseCheckInDate}</p>\r\n            <p>Check-out date: {props.chooseCheckOutDate}</p>\r\n            <p>Total price: ${total} for {props.chosenRoomAmount} room(s) for {props.chosenGuestAmount} guest(s) for {dayDifference} day(s) and travel</p>\r\n          <button onClick={validateForm}>Book</button>\r\n          {/* Annars skapas en knapp, två h2-element, fyra sex etiketter och input-element. Knappen anropar funktionen \"validateForm\" när användaren klickar på den. Dessutom skrivs en massa text ut.\r\n          Elementen med information om hotellen förses med informationen med hjälp av props. */}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default DetailsBox;\r\n  // Exporterar komponenten som \"DetailsBox\"."],"mappings":"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"},"metadata":{},"sourceType":"module"}