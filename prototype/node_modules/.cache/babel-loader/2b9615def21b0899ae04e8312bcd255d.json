{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minec\\\\Documents\\\\GitHub\\\\C3KGU1_Prototype_Adam_Kumlin\\\\prototype\\\\src\\\\components\\\\InformationCard.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InformationCard(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InformationCard\",\n    children: props.data.map((hotelResult, hotelResultIdentifier) => {\n      // Använder metoden map() för att skriva ut array:en \"data\":s information från \"App.js\". Objektet \"bookResult\" och numret \"bookResultIdentifier\" skapas, \"bookResult\" fylls med böckerna som framkom från sökningen. Varje bok får en speciell identifierare med sig (\"bookResultIdentifier\") i form av ett nummer (0 - x).\n      let hotelName = hotelResult.hotelName; // Först deklareras en variabel som ska innehålla ett av två olika värden. Sedan körs en if sats som kontrollerar så att en författare är falsk, dvs. odefinierad (att den inte finns). Då ges \"name\" ett felmeddelande i ett b-element. B-elementet göt texten fet, då sticker texten ut. Annars ges \"name\" array:ens data. Endast den första författaren skrivs ut med hjälp av metoden slice(). Anledningen till varför denna if-sats existerar är för att om något som söks på inte ger några resultat alls så försöker åndå funktionen nedan använda metoden slice() på en array som inte existerar. Då krashar programmet. Med hjälp av denna if-sats undviks detta.\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InformationCardResults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.Hot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.destination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InformationCard;\nexport default InformationCard; // Exporterar komponenten som \"InformationCard\".\n\nvar _c;\n\n$RefreshReg$(_c, \"InformationCard\");","map":{"version":3,"names":["InformationCard","props","data","map","hotelResult","hotelResultIdentifier","hotelName","Hot","destination","description","image","price"],"sources":["C:/Users/minec/Documents/GitHub/C3KGU1_Prototype_Adam_Kumlin/prototype/src/components/InformationCard.js"],"sourcesContent":["function InformationCard(props) {\r\n    \r\n  return (\r\n    <div className=\"InformationCard\">\r\n      {props.data.map((hotelResult, hotelResultIdentifier) => {\r\n            // Använder metoden map() för att skriva ut array:en \"data\":s information från \"App.js\". Objektet \"bookResult\" och numret \"bookResultIdentifier\" skapas, \"bookResult\" fylls med böckerna som framkom från sökningen. Varje bok får en speciell identifierare med sig (\"bookResultIdentifier\") i form av ett nummer (0 - x).\r\n            \r\n              let hotelName = hotelResult.hotelName;\r\n                // Först deklareras en variabel som ska innehålla ett av två olika värden. Sedan körs en if sats som kontrollerar så att en författare är falsk, dvs. odefinierad (att den inte finns). Då ges \"name\" ett felmeddelande i ett b-element. B-elementet göt texten fet, då sticker texten ut. Annars ges \"name\" array:ens data. Endast den första författaren skrivs ut med hjälp av metoden slice(). Anledningen till varför denna if-sats existerar är för att om något som söks på inte ger några resultat alls så försöker åndå funktionen nedan använda metoden slice() på en array som inte existerar. Då krashar programmet. Med hjälp av denna if-sats undviks detta.\r\n              \r\n              \r\n              return (\r\n      <div className=\"InformationCardResults\">\r\n        <h2>{props.Hot}</h2>\r\n        <p>{props.destination}</p>\r\n        <p>{props.description}</p>\r\n        <img src={props.image}/>\r\n        <p>{props.price}</p>\r\n      </div>\r\n        )})}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InformationCard;\r\n// Exporterar komponenten som \"InformationCard\"."],"mappings":";;;AAAA,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;EAE9B,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,UACGA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,CAACC,WAAD,EAAcC,qBAAd,KAAwC;MAClD;MAEE,IAAIC,SAAS,GAAGF,WAAW,CAACE,SAA5B,CAHgD,CAI9C;;MAGF,oBACR;QAAK,SAAS,EAAC,wBAAf;QAAA,wBACE;UAAA,UAAKL,KAAK,CAACM;QAAX;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAIN,KAAK,CAACO;QAAV;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,UAAIP,KAAK,CAACQ;QAAV;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAK,GAAG,EAAER,KAAK,CAACS;QAAhB;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,UAAIT,KAAK,CAACU;QAAV;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QADQ;IAQJ,CAfH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;KAtBQX,e;AAwBT,eAAeA,eAAf,C,CACA"},"metadata":{},"sourceType":"module"}