{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minec\\\\Documents\\\\GitHub\\\\C3KGU1_Prototype_Adam_Kumlin\\\\prototype\\\\src\\\\components\\\\DetailsBox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DetailsBox(props) {\n  // Komponenten tar emot props.\n  const checkInDateDays = new Date(props.chooseCheckInDate);\n  const checkOutDateDays = new Date(props.chooseCheckOutDate); // Skapar två konstanter som innehåller de olika datumen för incheckning och utcheckning.\n\n  const oneDay = 24 * 60 * 60 * 1000;\n  const dayDifference = Math.round(Math.abs((checkInDateDays - checkOutDateDays) / oneDay));\n  const validName = new RegExp(\"[a-zA-ZåäöÅÄÖ]+$\");\n  const validEmail = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\n  const validPhoneAndCreditCard = new RegExp('^[0-9]+$'); // Deklarerar variabler som innehåller regex-uttryck som kontrollerar om användaren har skrivit in ett giltigt namn, e-post, telefonnummer och kreditkortsnummer.\n\n  function handleChange(event) {\n    // Skapar en funktion som tar emot ett event.\n    props.setPaymentMethod(event.target.value); // Anropar funktionen \"setPaymentMethod\" som finns i App.js och skickar med det betalningsmetod som användaren har valt.\n  }\n\n  let total = props.chosenRooms.price * props.chosenRoomAmount * dayDifference; // Deklarerar en variabel som räknar ut totalpriset för rummen som användaren har valt. Priset per rum (props.chosenRooms.price) multipliceras med antalet rum (props.chosenRoomAmount).\n\n  function validateForm() {\n    // Skapar en funktion som kontrollerar om användaren har fyllt i alla fält samt om användaren har skrivit in giltiga värden i fälten.\n    if (!props.customerName || !props.customerPhone || !props.customerEmail || !props.customerCreditCard || !props.paymentMethod) {\n      // Om någon av state-variablerna \"customerName\", \"customerPhone\", \"customerEmail\", \"customerCreditCard\" eller \"paymentMethod\" inte har något värde.\n      alert(\"Please fill out all the fields.\"); // Skriver ut ett felmeddelande.\n    } else if (!validName.test(props.customerName)) {\n      // Om användaren har skrivit in ett namn som inte stämmer överens med regex-uttrycket \"validName\".\n      alert(\"The name is invalid.\"); // Skriver ut ett felmeddelande.\n    } else if (!validEmail.test(props.customerEmail)) {\n      // Om användaren har skrivit in en e-post som inte stämmer överens med regex-uttrycket \"validEmail\".\n      alert(\"The email is invalid.\"); // Skriver ut ett felmeddelande.\n    } else if (!validPhoneAndCreditCard.test(props.customerPhone)) {\n      // Om användaren har skrivit in ett telefonnummer som inte stämmer överens med regex-uttrycket \"validPhoneAndCreditCard\".\n      alert(\"The phone number is invalid.\"); // Skriver ut ett felmeddelande.\n    } else if (!validPhoneAndCreditCard.test(props.customerCreditCard)) {\n      // Om användaren har skrivit in ett kreditkortsnummer som inte stämmer överens med regex-uttrycket \"validPhoneAndCreditCard\".\n      alert(\"The credit card number is invalid.\"); // Skriver ut ett felmeddelande.\n    } else {\n      props.confirmBooking(props.id); // Annars anropas funktionen \"confirmBooking\" som finns i App.js och skickar med id:t på det hotell som användaren har valt.\n    }\n  }\n\n  if (!props.checkOutStatus) {\n    // Om state-variabeln \"checkOutStatus\" är falskt, alltså om utcheckningsprocessen inte har påbörjats än.\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this); // Returnerar en tom div.\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DetailsBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.backDetailsBox,\n        className: \"backButton\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"userName\",\n            value: props.customerName,\n            onChange: props.changeCustomerName,\n            placeholder: \"John Doe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Phone number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"phone\",\n            value: props.customerPhone,\n            onChange: props.changeCustomerPhone,\n            placeholder: \"1234567890\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"E-mail\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: props.customerEmail,\n            onChange: props.changeCustomerEmail,\n            placeholder: \"example@example.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Credit card number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"creditCard\",\n            value: props.customerCreditCard,\n            onChange: props.changeCustomerCreditCard,\n            placeholder: \"1234567890\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\" Pay now with credit card\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"paymentMethod\",\n            value: \"With credit card\",\n            checked: props.paymentMethod === \"With credit card\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 197\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Pay at the hotel\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"paymentMethod\",\n            value: \"At the hotel\",\n            checked: props.paymentMethod === \"At the hotel\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Hotel details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hotel name: \", props.chosenHotel.hotelName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hotel destination: \", props.chosenHotel.destination]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Room name: \", props.chosenRooms.roomName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Recommended guest amount: \", props.chosenRooms.guests]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Check-in date: \", props.chooseCheckInDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Check-out date: \", props.chooseCheckOutDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total price: $\", total, \" for \", props.chosenRoomAmount, \" room(s) for \", props.chosenGuestAmount, \" guest(s) for \", dayDifference, \" day(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: validateForm,\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_c = DetailsBox;\nexport default DetailsBox; // Exporterar komponenten som \"DetailsBox\".\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsBox\");","map":{"version":3,"names":["DetailsBox","props","checkInDateDays","Date","chooseCheckInDate","checkOutDateDays","chooseCheckOutDate","oneDay","dayDifference","Math","round","abs","validName","RegExp","validEmail","validPhoneAndCreditCard","handleChange","event","setPaymentMethod","target","value","total","chosenRooms","price","chosenRoomAmount","validateForm","customerName","customerPhone","customerEmail","customerCreditCard","paymentMethod","alert","test","confirmBooking","id","checkOutStatus","backDetailsBox","changeCustomerName","changeCustomerPhone","changeCustomerEmail","changeCustomerCreditCard","chosenHotel","hotelName","destination","roomName","guests","chosenGuestAmount"],"sources":["C:/Users/minec/Documents/GitHub/C3KGU1_Prototype_Adam_Kumlin/prototype/src/components/DetailsBox.js"],"sourcesContent":["function DetailsBox(props) {\r\n// Komponenten tar emot props.\r\n\r\nconst checkInDateDays = new Date(props.chooseCheckInDate);\r\nconst checkOutDateDays = new Date(props.chooseCheckOutDate);\r\n// Skapar två konstanter som innehåller de olika datumen för incheckning och utcheckning.\r\n\r\nconst oneDay = 24 * 60 * 60 * 1000;\r\nconst dayDifference = Math.round(Math.abs((checkInDateDays - checkOutDateDays) / oneDay));\r\n\r\nconst validName = new RegExp(\"[a-zA-ZåäöÅÄÖ]+$\");\r\nconst validEmail = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\r\nconst validPhoneAndCreditCard = new RegExp('^[0-9]+$');\r\n// Deklarerar variabler som innehåller regex-uttryck som kontrollerar om användaren har skrivit in ett giltigt namn, e-post, telefonnummer och kreditkortsnummer.\r\n\r\n  function handleChange(event) {\r\n  // Skapar en funktion som tar emot ett event.\r\n\r\n    props.setPaymentMethod(event.target.value);\r\n    // Anropar funktionen \"setPaymentMethod\" som finns i App.js och skickar med det betalningsmetod som användaren har valt.\r\n  }\r\n\r\n  let total = props.chosenRooms.price * props.chosenRoomAmount * dayDifference;\r\n  // Deklarerar en variabel som räknar ut totalpriset för rummen som användaren har valt. Priset per rum (props.chosenRooms.price) multipliceras med antalet rum (props.chosenRoomAmount).\r\n\r\n  function validateForm() {\r\n  // Skapar en funktion som kontrollerar om användaren har fyllt i alla fält samt om användaren har skrivit in giltiga värden i fälten.\r\n\r\n    if (!props.customerName || !props.customerPhone || !props.customerEmail || !props.customerCreditCard || !props.paymentMethod) {\r\n    // Om någon av state-variablerna \"customerName\", \"customerPhone\", \"customerEmail\", \"customerCreditCard\" eller \"paymentMethod\" inte har något värde.\r\n\r\n      alert(\"Please fill out all the fields.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n    } else if (!validName.test(props.customerName)) {\r\n    // Om användaren har skrivit in ett namn som inte stämmer överens med regex-uttrycket \"validName\".\r\n  \r\n      alert(\"The name is invalid.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n    } else if (!validEmail.test(props.customerEmail)) {\r\n    // Om användaren har skrivit in en e-post som inte stämmer överens med regex-uttrycket \"validEmail\".\r\n\r\n      alert(\"The email is invalid.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n\r\n    } else if (!validPhoneAndCreditCard.test(props.customerPhone)) {\r\n    // Om användaren har skrivit in ett telefonnummer som inte stämmer överens med regex-uttrycket \"validPhoneAndCreditCard\".\r\n\r\n      alert(\"The phone number is invalid.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n    } else if (!validPhoneAndCreditCard.test(props.customerCreditCard)) {\r\n    // Om användaren har skrivit in ett kreditkortsnummer som inte stämmer överens med regex-uttrycket \"validPhoneAndCreditCard\".\r\n\r\n      alert(\"The credit card number is invalid.\");\r\n      // Skriver ut ett felmeddelande.\r\n\r\n    } else {\r\n      props.confirmBooking(props.id)\r\n      // Annars anropas funktionen \"confirmBooking\" som finns i App.js och skickar med id:t på det hotell som användaren har valt.\r\n    }\r\n  }\r\n\r\n  if (!props.checkOutStatus) {\r\n  // Om state-variabeln \"checkOutStatus\" är falskt, alltså om utcheckningsprocessen inte har påbörjats än.\r\n\r\n    return <div></div>;\r\n    // Returnerar en tom div.\r\n\r\n  } else {\r\n      \r\n      return (\r\n        <div className=\"DetailsBox\">\r\n            <button onClick={props.backDetailsBox} className=\"backButton\">Back</button>\r\n            <h2>Customer details</h2>\r\n            <form>       \r\n            <label>Name<input type=\"text\" name=\"userName\" value={props.customerName} onChange={props.changeCustomerName} placeholder=\"John Doe\"/></label>\r\n            <label>Phone number<input type=\"number\" name=\"phone\" value={props.customerPhone} onChange={props.changeCustomerPhone} placeholder=\"1234567890\"/></label>\r\n            <label>E-mail<input type=\"email\" name=\"email\" value={props.customerEmail} onChange={props.changeCustomerEmail} placeholder=\"example@example.com\"/></label>\r\n            <label>Credit card number<input type=\"number\" name=\"creditCard\" value={props.customerCreditCard} onChange={props.changeCustomerCreditCard} placeholder=\"1234567890\"/></label>\r\n            <label> Pay now with credit card<input type=\"radio\" name=\"paymentMethod\" value=\"With credit card\" checked={props.paymentMethod === \"With credit card\"} onChange={handleChange}/></label><br></br>\r\n            <label>Pay at the hotel<input type=\"radio\" name=\"paymentMethod\" value=\"At the hotel\" checked={props.paymentMethod === \"At the hotel\"} onChange={handleChange}/></label> \r\n\r\n            <h2>Hotel details</h2>\r\n            <p>Hotel name: {props.chosenHotel.hotelName}</p>\r\n            <p>Hotel destination: {props.chosenHotel.destination}</p>\r\n            <p>Room name: {props.chosenRooms.roomName}</p>\r\n            <p>Recommended guest amount: {props.chosenRooms.guests}</p>\r\n            <p>Check-in date: {props.chooseCheckInDate}</p>\r\n            <p>Check-out date: {props.chooseCheckOutDate}</p>\r\n            <p>Total price: ${total} for {props.chosenRoomAmount} room(s) for {props.chosenGuestAmount} guest(s) for {dayDifference} day(s)</p>\r\n            </form>\r\n          <button onClick={validateForm}>Book</button>\r\n          {/* Annars skapas en knapp, två h2-element, fyra sex etiketter och input-element. Knappen anropar funktionen \"validateForm\" när användaren klickar på den. Dessutom skrivs en massa text ut.\r\n          Elementen med information om hotellen förses med informationen med hjälp av props. */}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default DetailsBox;\r\n  // Exporterar komponenten som \"DetailsBox\"."],"mappings":"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"},"metadata":{},"sourceType":"module"}