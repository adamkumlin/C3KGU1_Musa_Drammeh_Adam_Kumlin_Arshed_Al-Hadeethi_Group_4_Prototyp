{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minec\\\\Documents\\\\GitHub\\\\C3KGU1_Prototype_Adam_Kumlin\\\\prototype\\\\src\\\\components\\\\RoomInformationCard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // Importerar State.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoomInformationCard(props) {\n  _s();\n\n  // Komponenten tar emot props.\n  const [buttonDisabled, setButtonDisabled] = useState(true); // Skapar en state-variabel som heter \"buttonDisabled\" och som har värdet \"true\". State-variabeln används för att kontrollera om knappen ska vara inaktiverad eller inte.\n\n  const [checkOutDateDisabled, setCheckOutDateDisabled] = useState(true);\n  const [chooseTravelDisabled, setChooseTravelDisabled] = useState(true);\n  const validRoomAndGuestAmount = new RegExp('^[1-9]+$'); // Skapar en variabel som innehåller ett regex-uttryck som kontrollerar om användaren har skrivit in ett giltigt antal rum och gäster.\n\n  let todaysDate = new Date(); // Skapar en en variabel som innehåller ett datum.\n\n  let dd = String(todaysDate.getDate());\n  let mm = String(todaysDate.getMonth() + 1);\n  let yyyy = todaysDate.getFullYear(); // Skapar variabler som innehåller dagens datum, applicerar dem på det skapade datumet.\n\n  if (dd < 10) {\n    // Om dagens datum är mindre än 10.\n    dd = \"0\" + dd; // Lägger till en nolla framför dagens datum.\n  }\n\n  if (mm < 10) {\n    // Om månadens datum är mindre än 10.\n    mm = \"0\" + mm; // Lägger till en nolla framför månadens datum.\n  }\n\n  todaysDate = `${yyyy}-${mm}-${dd}`; // Ändrar datumet så det blir i formatet \"yyyy-mm-dd\".\n\n  function handleRoomChange(event) {\n    // Skapar en funktion som tar emot ett event.\n    props.chooseRooms(props.id, event.target.value); // Anropar funktionen \"chooseRooms\" som finns i App.js och skickar med id:t på det hotell som användaren har valt och det rum som användaren har valt.\n\n    setButtonDisabled(false); // Sätter state-variabeln \"disabled\" till \"false\" så att knappen blir aktiverad.\n  }\n\n  function handleCheckInDateChange(event) {\n    // Skapar en funktion som tar emot ett event.\n    props.setChooseCheckInDate(event.target.value); // Anropar sätter \"chooseCheckInDate\" till det datum som användaren har valt.\n\n    setCheckOutDateDisabled(false); // Sätter state-variabeln \"disabled\" till \"false\" så att input-elementet blir aktiverat.\n  }\n\n  function handleTravelChecked() {\n    // Skapar en funktion som tar emot ett event.\n    if (!chooseTravelDisabled) {\n      setChooseTravelDisabled(true);\n      props.setChooseTravelStatus(false); // Sätter state-variabeln \"disabled\" till \"true\" så att input-elementet blir inaktiverat.\n    } else {\n      setChooseTravelDisabled(false);\n      props.setChosenTravelStatus(true);\n    } // Sätter state-variabeln \"disabled\" till \"false\" så att input-elementet blir aktiverat.\n\n  }\n\n  function handleTravelChange(event) {\n    // Skapar en funktion som tar emot ett event.\n    props.chooseAirports(props.id, event.target.value); // Sätter state-variabeln \"selectTravel\" till \"true\" så att input-elementet blir aktiverat.\n  }\n\n  function validateRoomInformation() {\n    // Skapar en funktion som kontrollerar om användaren har valt ett giltigt antal rum, gäster och inchecknings-samt utcheckningsdatum.\n    if (!props.chosenGuestAmount || !props.chosenRoomAmount || !props.chooseCheckInDate || !props.chooseCheckOutDate) {\n      // Om någon av state-variablerna \"chosenGuestAmount\", \"chosenRoomAmount\", \"chooseCheckInDate\" eller \"chooseCheckOutDate\" inte har något värde.\n      alert(\"Please fill out all the fields.\"); // Skriver ut ett felmeddelande.\n    } else if (!validRoomAndGuestAmount.test(props.chosenGuestAmount)) {\n      // Om användaren har skrivit in ett ett antal gäster som inte stämmer överens med regex-uttrycket \"validRoomAndGuestAmount\".\n      alert(\"The guest amount is invalid.\"); // Skriver ut ett felmeddelande.\n    } else if (!validRoomAndGuestAmount.test(props.chosenRoomAmount)) {\n      // Om användaren har skrivit in ett ett antal rum som inte stämmer överens med regex-uttrycket \"validRoomAndGuestAmount\".\n      alert(\"The room amount is invalid.\"); // Skriver ut ett felmeddelande.\n    } else if (props.chooseCheckInDate === props.chooseCheckOutDate) {\n      // Om chooseCheckInDate är lika med chooseCheckOutDate. Alltså om användaren har valt samma datum för in- och utcheckning.\n      alert(\"The check in and check out date can't be the same.\"); // Skriver ut ett felmeddelande.\n    } else {\n      props.checkOut(); // Annars anropas funktionen \"checkOut\" som finns i App.js.\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RoomInformationCard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: props.rooms[0].roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Room for \", props.rooms[0].guests, \" guest(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Price: $\", props.rooms[0].price, \" per night\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.rooms[0].image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose room \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"chooseRooms\",\n            value: props.rooms[0].roomID,\n            onChange: handleRoomChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 26\n        }, this)]\n      }, props.rooms[0].roomID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: props.rooms[1].roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Room for \", props.rooms[1].guests, \" guests\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Price: $\", props.rooms[1].price, \" per night\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.rooms[1].image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose room \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"chooseRooms\",\n            value: props.rooms[1].roomID,\n            onChange: handleRoomChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 26\n        }, this)]\n      }, props.rooms[1].roomID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: props.rooms[2].roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Room for \", props.rooms[2].guests, \" guests\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Price: $\", props.rooms[2].price, \" per night\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.rooms[2].image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose room \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"chooseRooms\",\n            value: props.rooms[2].roomID,\n            onChange: handleRoomChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 26\n        }, this)]\n      }, props.rooms[2].roomID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose guest amount \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"guestAmount\",\n          className: \"roomAmount\",\n          min: \"1\",\n          value: props.chosenGuestAmount,\n          onChange: e => props.setChosenGuestAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose room amount \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"roomAmount\",\n          className: \"roomAmount\",\n          min: \"1\",\n          value: props.chosenRoomAmount,\n          onChange: e => props.setChosenRoomAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose check-in date\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: todaysDate,\n          className: \"chooseCheckInDate\",\n          name: \"chooseCheckInDate\",\n          value: props.chooseCheckInDate,\n          onChange: handleCheckInDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose check-out date\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: props.chooseCheckInDate,\n          className: \"chooseCheckOutDate\",\n          disabled: checkOutDateDisabled,\n          name: \"chooseCheckOutDate\",\n          value: props.chooseCheckOutDate,\n          onChange: e => props.setChooseCheckOutDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose travel (optional) \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"chooseTravel\",\n          value: chooseTravelDisabled,\n          onChange: handleTravelChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [props.airports[0].airportName, \" $\", props.airports[0].price, /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: chooseTravelDisabled,\n          type: \"radio\",\n          name: \"chooseAirports\",\n          value: props.airports[0].airportID,\n          onChange: handleTravelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [props.airports[1].airportName, \" $\", props.airports[1].price, /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: chooseTravelDisabled,\n          type: \"radio\",\n          name: \"chooseAirports\",\n          value: props.airports[1].airportID,\n          onChange: handleTravelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: buttonDisabled,\n        onClick: validateRoomInformation,\n        children: \"Check out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, props.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoomInformationCard, \"6YzKi7CJFQ4gabBpHobbDWlWULA=\");\n\n_c = RoomInformationCard;\nexport default RoomInformationCard; // Exporterar komponenten som \"RoomInformationCard\".\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomInformationCard\");","map":{"version":3,"names":["useState","RoomInformationCard","props","buttonDisabled","setButtonDisabled","checkOutDateDisabled","setCheckOutDateDisabled","chooseTravelDisabled","setChooseTravelDisabled","validRoomAndGuestAmount","RegExp","todaysDate","Date","dd","String","getDate","mm","getMonth","yyyy","getFullYear","handleRoomChange","event","chooseRooms","id","target","value","handleCheckInDateChange","setChooseCheckInDate","handleTravelChecked","setChooseTravelStatus","setChosenTravelStatus","handleTravelChange","chooseAirports","validateRoomInformation","chosenGuestAmount","chosenRoomAmount","chooseCheckInDate","chooseCheckOutDate","alert","test","checkOut","rooms","roomName","guests","price","image","roomID","e","setChosenGuestAmount","setChosenRoomAmount","setChooseCheckOutDate","airports","airportName","airportID"],"sources":["C:/Users/minec/Documents/GitHub/C3KGU1_Prototype_Adam_Kumlin/prototype/src/components/RoomInformationCard.js"],"sourcesContent":["import { useState } from 'react';\r\n// Importerar State.\r\n\r\nfunction RoomInformationCard(props) {\r\n// Komponenten tar emot props.\r\n\r\n    const [buttonDisabled, setButtonDisabled] = useState(true);\r\n    // Skapar en state-variabel som heter \"buttonDisabled\" och som har värdet \"true\". State-variabeln används för att kontrollera om knappen ska vara inaktiverad eller inte.\r\n\r\n    const [checkOutDateDisabled, setCheckOutDateDisabled] = useState(true);\r\n\r\n    const [chooseTravelDisabled, setChooseTravelDisabled] = useState(true);\r\n\r\n    const validRoomAndGuestAmount = new RegExp('^[1-9]+$');\r\n    // Skapar en variabel som innehåller ett regex-uttryck som kontrollerar om användaren har skrivit in ett giltigt antal rum och gäster.\r\n\r\n    let todaysDate = new Date();\r\n    // Skapar en en variabel som innehåller ett datum.\r\n\r\n    let dd = String(todaysDate.getDate());\r\n    let mm = String(todaysDate.getMonth() + 1);\r\n    let yyyy = todaysDate.getFullYear();\r\n    // Skapar variabler som innehåller dagens datum, applicerar dem på det skapade datumet.\r\n\r\n    if (dd < 10) {\r\n    // Om dagens datum är mindre än 10.\r\n\r\n      dd = \"0\" + dd;\r\n      // Lägger till en nolla framför dagens datum.\r\n    }\r\n\r\n    if (mm < 10) {\r\n    // Om månadens datum är mindre än 10.\r\n\r\n      mm = \"0\" + mm;\r\n      // Lägger till en nolla framför månadens datum.\r\n    }\r\n\r\n    todaysDate = `${yyyy}-${mm}-${dd}`;\r\n    // Ändrar datumet så det blir i formatet \"yyyy-mm-dd\".\r\n\r\n    function handleRoomChange(event) {\r\n    // Skapar en funktion som tar emot ett event.\r\n\r\n        props.chooseRooms(props.id, event.target.value);\r\n        // Anropar funktionen \"chooseRooms\" som finns i App.js och skickar med id:t på det hotell som användaren har valt och det rum som användaren har valt.\r\n\r\n        setButtonDisabled(false);\r\n        // Sätter state-variabeln \"disabled\" till \"false\" så att knappen blir aktiverad.\r\n    }\r\n\r\n    function handleCheckInDateChange(event) {\r\n    // Skapar en funktion som tar emot ett event.\r\n\r\n      props.setChooseCheckInDate(event.target.value)\r\n      // Anropar sätter \"chooseCheckInDate\" till det datum som användaren har valt.\r\n\r\n      setCheckOutDateDisabled(false);\r\n      // Sätter state-variabeln \"disabled\" till \"false\" så att input-elementet blir aktiverat.\r\n    }\r\n\r\n    function handleTravelChecked() {\r\n    // Skapar en funktion som tar emot ett event.\r\n      if (!chooseTravelDisabled) {\r\n\r\n      setChooseTravelDisabled(true);\r\n      props.setChooseTravelStatus(false);\r\n      // Sätter state-variabeln \"disabled\" till \"true\" så att input-elementet blir inaktiverat.\r\n      } else {\r\n      setChooseTravelDisabled(false);\r\n      props.setChosenTravelStatus(true);\r\n      }\r\n      // Sätter state-variabeln \"disabled\" till \"false\" så att input-elementet blir aktiverat.\r\n    }\r\n\r\n    function handleTravelChange(event) {\r\n    // Skapar en funktion som tar emot ett event.\r\n\r\n      props.chooseAirports(props.id, event.target.value);\r\n      // Sätter state-variabeln \"selectTravel\" till \"true\" så att input-elementet blir aktiverat.\r\n    }\r\n\r\n    function validateRoomInformation() {\r\n    // Skapar en funktion som kontrollerar om användaren har valt ett giltigt antal rum, gäster och inchecknings-samt utcheckningsdatum.\r\n\r\n        if (!props.chosenGuestAmount || !props.chosenRoomAmount || !props.chooseCheckInDate || !props.chooseCheckOutDate) {\r\n        // Om någon av state-variablerna \"chosenGuestAmount\", \"chosenRoomAmount\", \"chooseCheckInDate\" eller \"chooseCheckOutDate\" inte har något värde.\r\n\r\n            alert(\"Please fill out all the fields.\");\r\n            // Skriver ut ett felmeddelande.\r\n\r\n          } else if (!validRoomAndGuestAmount.test(props.chosenGuestAmount)) {\r\n            // Om användaren har skrivit in ett ett antal gäster som inte stämmer överens med regex-uttrycket \"validRoomAndGuestAmount\".\r\n\r\n            alert(\"The guest amount is invalid.\");\r\n            // Skriver ut ett felmeddelande.\r\n\r\n          } else if (!validRoomAndGuestAmount.test(props.chosenRoomAmount)) {\r\n            // Om användaren har skrivit in ett ett antal rum som inte stämmer överens med regex-uttrycket \"validRoomAndGuestAmount\".\r\n\r\n            alert(\"The room amount is invalid.\");\r\n            // Skriver ut ett felmeddelande.\r\n\r\n          } else if (props.chooseCheckInDate === props.chooseCheckOutDate){\r\n            // Om chooseCheckInDate är lika med chooseCheckOutDate. Alltså om användaren har valt samma datum för in- och utcheckning.\r\n\r\n            alert(\"The check in and check out date can't be the same.\");\r\n            // Skriver ut ett felmeddelande.\r\n\r\n          } else {\r\n            props.checkOut();\r\n            // Annars anropas funktionen \"checkOut\" som finns i App.js.\r\n          }\r\n    }\r\n\r\n  return (\r\n\r\n    <div className=\"RoomInformationCard\">\r\n        <div key={props.id}>\r\n\r\n            <ul key={props.rooms[0].roomID}>\r\n                <li>{props.rooms[0].roomName}</li>\r\n                <li>Room for {props.rooms[0].guests} guest(s)</li>\r\n                <li>Price: ${props.rooms[0].price} per night</li>\r\n                <img src={props.rooms[0].image}/>\r\n                <br></br><label>Choose room <input type=\"radio\" name=\"chooseRooms\" value={props.rooms[0].roomID} onChange={handleRoomChange}/></label>\r\n            </ul>\r\n\r\n            <ul key={props.rooms[1].roomID}>\r\n                <li>{props.rooms[1].roomName}</li>\r\n                <li>Room for {props.rooms[1].guests} guests</li>\r\n                <li>Price: ${props.rooms[1].price} per night</li>\r\n                <img src={props.rooms[1].image}/>\r\n                <br></br><label>Choose room <input type=\"radio\" name=\"chooseRooms\" value={props.rooms[1].roomID} onChange={handleRoomChange}/></label>\r\n            </ul>\r\n\r\n            <ul key={props.rooms[2].roomID}>\r\n                <li>{props.rooms[2].roomName}</li>\r\n                <li>Room for {props.rooms[2].guests} guests</li>\r\n                <li>Price: ${props.rooms[2].price} per night</li>\r\n                <img src={props.rooms[2].image}/>\r\n                <br></br><label>Choose room <input type=\"radio\" name=\"chooseRooms\" value={props.rooms[2].roomID} onChange={handleRoomChange}/></label>\r\n            </ul>\r\n            <label>Choose guest amount <input type=\"number\" name=\"guestAmount\" className=\"roomAmount\" min=\"1\" value={props.chosenGuestAmount} onChange={(e) => props.setChosenGuestAmount(e.target.value)}/></label>\r\n            <label>Choose room amount <input type=\"number\" name=\"roomAmount\" className=\"roomAmount\" min=\"1\" value={props.chosenRoomAmount} onChange={(e) => props.setChosenRoomAmount(e.target.value)}/></label>\r\n            <label>Choose check-in date<input type=\"date\" min={todaysDate} className=\"chooseCheckInDate\" name=\"chooseCheckInDate\" value={props.chooseCheckInDate} onChange={handleCheckInDateChange}/></label>\r\n            <label>Choose check-out date<input type=\"date\" min={props.chooseCheckInDate} className=\"chooseCheckOutDate\" disabled={checkOutDateDisabled} name=\"chooseCheckOutDate\" value={props.chooseCheckOutDate} onChange={(e) => props.setChooseCheckOutDate(e.target.value)}/></label>\r\n            <label>Choose travel (optional) <input type=\"checkbox\" name=\"chooseTravel\" value={chooseTravelDisabled} onChange={handleTravelChecked}/></label>\r\n            <br></br><label>{props.airports[0].airportName} ${props.airports[0].price}<input disabled={chooseTravelDisabled} type=\"radio\" name=\"chooseAirports\" value={props.airports[0].airportID} onChange={handleTravelChange}/></label>\r\n            <br></br><label>{props.airports[1].airportName} ${props.airports[1].price}<input disabled={chooseTravelDisabled} type=\"radio\" name=\"chooseAirports\" value={props.airports[1].airportID} onChange={handleTravelChange}/></label>\r\n            <button disabled={buttonDisabled} onClick={validateRoomInformation}>Check out</button>\r\n        </div>\r\n        {/* Skapar en div med information om rummen (med hjälp av props), en radioknapp för att välja rummet samt en knapp för att gå vidare till nästa steg. \"chooseCheckInDate\"-elementet\r\n        ges variabeln \"today\" som min-attribut. \"chooseCheckOutDate\"-elementet ges värdet \"chooseCheckOutDate\" som min-attribut. Slutligen ges knappens min-attribut \"buttonDisabled\":s värde. */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomInformationCard;\r\n// Exporterar komponenten som \"RoomInformationCard\"."],"mappings":"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"},"metadata":{},"sourceType":"module"}